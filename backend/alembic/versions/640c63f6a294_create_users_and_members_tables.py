"""create_users_and_members_tables

Revision ID: 640c63f6a294
Revises: d9b6b1c91684
Create Date: 2025-02-07 09:06:03.437675

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '640c63f6a294'
down_revision: Union[str, None] = 'd9b6b1c91684'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=False),
    sa.Column('fiscal_code', sa.String(), nullable=True),
    sa.Column('type', sa.Enum('REAL', 'SIMULATED', name='usertype'), nullable=False),
    sa.Column('role', sa.Enum('ADMIN', 'VENDOR', 'REFERENT', 'USER', name='userrole'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('company_name', sa.String(), nullable=True),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('preferences', sa.JSON(), server_default='{}', nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_fiscal_code'), 'users', ['fiscal_code'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('members',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('type', sa.Enum('CONSUMER', 'PRODUCER', 'PROSUMER', name='membertype'), nullable=False),
    sa.Column('pod_id', sa.String(), nullable=True),
    sa.Column('smart_meter_id', sa.String(), nullable=True),
    sa.Column('meter_type', sa.String(), nullable=True),
    sa.Column('load_profile_type', sa.Enum('RESIDENTIAL', 'COMMERCIAL', 'INDUSTRIAL', 'CUSTOM', name='loadprofiletype'), nullable=False),
    sa.Column('load_profile_data', sa.JSON(), nullable=True),
    sa.Column('contracted_power', sa.Float(), nullable=True),
    sa.Column('voltage_level', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('activation_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deactivation_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('verification_status', sa.String(), nullable=True),
    sa.Column('technical_info', sa.JSON(), server_default='{}', nullable=True),
    sa.Column('device_info', sa.JSON(), server_default='{}', nullable=True),
    sa.Column('energy_sharing_preferences', sa.JSON(), server_default='{}', nullable=True),
    sa.Column('fiscal_code', sa.String(), nullable=True),
    sa.Column('billing_address', sa.String(), nullable=True),
    sa.Column('billing_preferences', sa.JSON(), server_default='{}', nullable=True),
    sa.Column('configuration_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('energy_produced', sa.Float(), nullable=True),
    sa.Column('energy_consumed', sa.Float(), nullable=True),
    sa.Column('energy_shared', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['configuration_id'], ['cer_configuration.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_members_id'), 'members', ['id'], unique=False)
    op.create_index(op.f('ix_members_pod_id'), 'members', ['pod_id'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_members_pod_id'), table_name='members')
    op.drop_index(op.f('ix_members_id'), table_name='members')
    op.drop_table('members')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_fiscal_code'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
